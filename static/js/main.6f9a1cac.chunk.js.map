{"version":3,"sources":["pages/tasks/Tasks.module.scss","pages/dashboard/Dashboard.module.scss","pages/unity-app/index.tsx","functions/addUrlPath.ts","pages/dashboard/SecCards.tsx","pages/dashboard/MainCards.tsx","pages/dashboard/TaskCard.tsx","pages/dashboard/AddedTasks.tsx","pages/dashboard/index.tsx","components/Menu.tsx","components/Topbar.tsx","components/UserInfo.tsx","components/AdditionalMenu.tsx","assets/unsplash_8erBzivCEJU.jpg","assets/unsplash_92OQdTVMMck.jpg","assets/unsplash_Q9A52B2k770.jpg","pages/tasks/index.tsx","store/user/reducers/profileSlice.ts","store/user/index.ts","store/tests/reducers/theoryTestsSlice.ts","store/tests/index.ts","store/index.ts","saga/empty/emptyWorker.ts","saga/index.ts","store/store.ts","pages/tests/TestsList.tsx","pages/tests/Timer.tsx","pages/tests/Questions.tsx","pages/tests/TestPage.tsx","pages/tests/index.tsx","app/index.tsx","index.tsx","pages/tests/Tests.module.scss","components/Topbar.module.scss","components/UserInfo.module.scss","components/AdditionalMenu.module.scss"],"names":["module","exports","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","UnityApp","style","width","height","addUrlPath","path","SecCards","className","styles","secCards","title","secCardImage","alt","src","MainCards","cards","flexBasis","bordered","bodyStyle","cardContent","cardImage","cardStats","statElem","color","text","percent","TaskCard","url","imgUrl","tags","description","withoutTitle","to","emptyCard","undefined","headStyle","display","image","map","tag","index","count","overflowCount","backgroundColor","AddedTasks","tasks","tasksTitle","tasksCards","gap","alignItems","RightOutlined","Dashboard","wrapper","SubMenu","MenuBlock","Menu","useState","window","location","pathname","selectedKeys","setSelectedKeys","useEffect","defaultOpenKeys","defaultSelectedKeys","mode","theme","Item","Topbar","settings","button","SearchOutlined","QuestionCircleOutlined","badge","BellOutlined","UserInfo","verticalAlign","size","info","name","role","AdditionalMenu","link","Tasks","img3","img2","img1","userProfileSLice","createSlice","initialState","reducers","setName","state","payload","actions","userReducers","combineReducers","profile","userProfileReducer","list","id","uuidv4","result","currentStatus","testDescription","questions","quest","trueA","ifTrue","answers","theoryTestsSLice","addTests","completeTest","test","testId","toString","theoryTestsActions","testsReducers","theory","theoryReducerReducer","appReducer","rootReducer","action","type","loadUserData","emptyWorker","takeLeading","rootSaga","sagas","all","saga","spawn","call","message","error","JSON","stringify","then","console","log","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","thunk","run","persistStore","useAppSelector","useSelector","TestsList","tests","testsWrapper","Timer","startFrom","timer","duration","durationFromNow","interval","format","Questions","task","setStatus","dispatch","useDispatch","Form","useForm","form","onFinish","values","forEach","completed","success","taskQuest","taskHead","taskNum","questTitle","Group","direction","answer","value","onClick","submit","marginTop","TestPageRouted","withRouter","match","thisTest","filter","params","length","status","ltlMargin","moment","toISOString","testDesc","subTitle","extra","Tests","exact","component","Header","Layout","Sider","Content","App","borderBottom","overflowY","paddingTop","paddingLeft","paddingBottom","paddingRight","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f9a1cac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tasks_wrapper__3FKMK\",\"title\":\"Tasks_title__LfJSd\",\"tasks\":\"Tasks_tasks__1CAOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dashboard_wrapper__33Kum\",\"cards\":\"Dashboard_cards__3uWIR\",\"cardContent\":\"Dashboard_cardContent__1Xxot\",\"cardImage\":\"Dashboard_cardImage__A0YVP\",\"cardStats\":\"Dashboard_cardStats__1GjUE\",\"statElem\":\"Dashboard_statElem__5uH1a\",\"percent\":\"Dashboard_percent__phl2L\",\"secCards\":\"Dashboard_secCards__LfeUC\",\"secCardImage\":\"Dashboard_secCardImage__1bUiw\",\"tasks\":\"Dashboard_tasks__ecwKG\",\"tasksTitle\":\"Dashboard_tasksTitle__27vSa\",\"tasksCards\":\"Dashboard_tasksCards__38ruf\",\"emptyCard\":\"Dashboard_emptyCard__13UaE\",\"image\":\"Dashboard_image__1AYj3\",\"description\":\"Dashboard_description__1qnaC\",\"tags\":\"Dashboard_tags__aFHWO\"};","import { FC } from 'react'\nimport Unity, { UnityContext } from 'react-unity-webgl'\n\nconst unityContext = new UnityContext({\n  loaderUrl: 'unity/DRONE-HTML.loader.js',\n  dataUrl: 'unity/DRONE-HTML.data',\n  frameworkUrl: 'unity/DRONE-HTML.framework.js',\n  codeUrl: 'unity/DRONE-HTML.wasm',\n})\n\nexport const UnityApp: FC = () => {\n  return (\n    <Unity\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n      unityContext={unityContext}\n    />\n  )\n}\n","export const addUrlPath: (path: string) => string = (path) => {\n  return `/fcp-app${path}`\n}\n","import { FC } from 'react'\nimport { Card } from 'antd'\n\nimport styles from './Dashboard.module.scss'\n\nexport const SecCards: FC = () => {\n  return (\n    <div className={styles.secCards}>\n      <Card title=\"Награды\">\n        <div className={styles.secCardImage}>\n          <img\n            alt=\"example\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n          />\n        </div>\n      </Card>\n      <Card title=\"Оценки\">\n        <div className={styles.secCardImage}>\n          <img\n            alt=\"example\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n          />\n        </div>\n      </Card>\n      <Card title=\"Уровень подготовки\">\n        <div className={styles.secCardImage}>\n          <img\n            alt=\"example\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n          />\n        </div>\n      </Card>\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport { Badge, Card } from 'antd'\nimport { SecCards } from './SecCards'\n\nimport styles from './Dashboard.module.scss'\n\nexport const MainCards: FC = () => {\n  return (\n    <div className={styles.cards}>\n      <Card\n        title=\"Прогресс обучения\"\n        style={{\n          flexBasis: '50%',\n        }}\n        bordered={false}\n        bodyStyle={{\n          height: '100%',\n        }}\n      >\n        <div className={styles.cardContent}>\n          <div className={styles.cardImage}>\n            <img\n              alt=\"example\"\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n            />\n          </div>\n          <div className={styles.cardStats}>\n            <div className={styles.statElem}>\n              <Badge color={'blue'} text={'Учебник'} />\n              <span className={styles.percent}>22%</span>\n            </div>\n            <div className={styles.statElem}>\n              <Badge color={'yellow'} text={'Тесты'} />\n              <span className={styles.percent}>89%</span>\n            </div>\n            <div className={styles.statElem}>\n              <Badge color={'green'} text={'Практика'} />\n              <span className={styles.percent}>29%</span>\n            </div>\n          </div>\n        </div>\n      </Card>\n      <SecCards />\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { Badge, Card } from 'antd'\nimport { NavLink } from 'react-router-dom'\n\nimport styles from './Dashboard.module.scss'\n\ninterface Tag {\n  color: string\n  text: string\n}\n\ninterface Props {\n  title: string\n  url: string\n  width: number\n  imgUrl: string\n  tags: Tag[]\n  description: string\n  withoutTitle?: boolean\n}\n\nexport const TaskCard: FC<Props> = ({\n  title,\n  url,\n  width,\n  imgUrl,\n  tags,\n  description,\n  withoutTitle,\n}) => {\n  return (\n    <NavLink to={addUrlPath(url)} className={styles.emptyCard}>\n      <Card\n        title={!withoutTitle ? title : undefined}\n        style={{\n          width: width,\n        }}\n        headStyle={{\n          display: withoutTitle ? 'none' : '',\n        }}\n      >\n        <div className={styles.image}>\n          <img alt=\"example\" src={imgUrl} />\n        </div>\n        <span className={styles.description}>{description}</span>\n        <div className={styles.tags}>\n          {tags.map((tag, index) => (\n            <Badge\n              key={index}\n              className=\"site-badge-count-109\"\n              count={tag.text}\n              overflowCount={100}\n              style={{ backgroundColor: tag.color }}\n            />\n          ))}\n        </div>\n      </Card>\n    </NavLink>\n  )\n}\n","import { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { RightOutlined } from '@ant-design/icons'\nimport { TaskCard } from './TaskCard'\n\nimport styles from './Dashboard.module.scss'\n\nexport const AddedTasks: FC = () => {\n  return (\n    <div className={styles.tasks}>\n      <span className={styles.tasksTitle}>Назначенные задания</span>\n      <div className={styles.tasksCards}>\n        <TaskCard\n          url={'/unity'}\n          imgUrl={\n            'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png'\n          }\n          title={'Практика'}\n          width={260}\n          description={'Взлёт и посадка'}\n          tags={[\n            {\n              text: 'Назначено',\n              color: '#1890FF',\n            },\n          ]}\n        />\n        <TaskCard\n          url={'/unity'}\n          imgUrl={\n            'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png'\n          }\n          title={'Тест'}\n          width={260}\n          description={'Основы управления летательными аппаратами'}\n          tags={[\n            {\n              text: 'Назначено 23:29:29',\n              color: '#FF7875',\n            },\n          ]}\n        />\n        <NavLink\n          to={addUrlPath('/tasks')}\n          style={{\n            display: 'flex',\n            gap: '12px',\n            alignItems: 'center',\n          }}\n        >\n          <RightOutlined />\n          Все задания\n        </NavLink>\n      </div>\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport { MainCards } from './MainCards'\nimport { AddedTasks } from './AddedTasks'\n\nimport styles from './Dashboard.module.scss'\n\nexport const Dashboard: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <MainCards />\n      <AddedTasks />\n    </div>\n  )\n}\n","import { FC, useEffect, useState } from 'react'\nimport { Menu as MenuBlock } from 'antd'\nimport { NavLink } from 'react-router-dom'\nimport { addUrlPath } from '../functions/addUrlPath'\n\nconst { SubMenu } = MenuBlock\n\nexport const Menu: FC = () => {\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([\n    window.location.pathname,\n  ])\n\n  useEffect(() => {\n    setSelectedKeys([window.location.pathname])\n\n    //  eslint-disable-next-line\n  }, [window.location.pathname])\n\n  return (\n    <MenuBlock\n      style={{ width: 256 }}\n      defaultOpenKeys={[\n        addUrlPath('/theory'),\n        addUrlPath('/practice'),\n        addUrlPath('/exam'),\n      ]}\n      defaultSelectedKeys={selectedKeys}\n      mode={'inline'}\n      theme={'light'}\n    >\n      <MenuBlock.Item key={addUrlPath('')}>\n        <NavLink to={addUrlPath('')}>Главная</NavLink>\n      </MenuBlock.Item>\n      <MenuBlock.Item key={addUrlPath('/tasks')}>\n        <NavLink to={addUrlPath('/tasks')}>Назначенные задания</NavLink>\n      </MenuBlock.Item>\n      <SubMenu key={addUrlPath('/theory')} title=\"Теория\">\n        <MenuBlock.Item key={addUrlPath('/learn')}>\n          <NavLink to={addUrlPath('/learn')}>Учебник</NavLink>\n        </MenuBlock.Item>\n        <MenuBlock.Item key={addUrlPath('/tests')}>\n          <NavLink to={addUrlPath('/tests')}>Тесты</NavLink>\n        </MenuBlock.Item>\n        <MenuBlock.Item key={addUrlPath('/docs')}>\n          <NavLink to={addUrlPath('/docs')}>Нормативные акты</NavLink>\n        </MenuBlock.Item>\n      </SubMenu>\n      <SubMenu key={addUrlPath('/practice')} title=\"Практика\">\n        <MenuBlock.Item key={addUrlPath('/practice/learn')}>\n          <NavLink to={addUrlPath('/practice/learn')}>Обучение</NavLink>\n        </MenuBlock.Item>\n        <MenuBlock.Item key={addUrlPath('/practice/prepare')}>\n          <NavLink to={addUrlPath('/practice/prepare')}>Подготовка</NavLink>\n        </MenuBlock.Item>\n      </SubMenu>\n      <SubMenu key={addUrlPath('/exam')} title=\"Экзамен\">\n        <MenuBlock.Item key=\"5\">Option 3</MenuBlock.Item>\n        <MenuBlock.Item key=\"6\">Option 4</MenuBlock.Item>\n      </SubMenu>\n      <MenuBlock.Item key={addUrlPath('/grade')}>\n        <NavLink to={addUrlPath('/grade')}>Критерии оценок</NavLink>\n      </MenuBlock.Item>\n    </MenuBlock>\n  )\n}\n","import { FC } from 'react'\nimport {\n  SearchOutlined,\n  QuestionCircleOutlined,\n  BellOutlined,\n} from '@ant-design/icons'\n\nimport styles from './Topbar.module.scss'\nimport { Badge } from 'antd'\n\nexport const Topbar: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <span className={styles.title}>\n        Образовательная платформа операторов БПЛА РОССЕТИ\n      </span>\n      <div className={styles.settings}>\n        <div className={styles.button}>\n          <SearchOutlined />\n        </div>\n        <div className={styles.button}>\n          <QuestionCircleOutlined />\n        </div>\n        <div className={styles.button}>\n          <Badge className={styles.badge} count={25} />\n          <BellOutlined />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nimport styles from './UserInfo.module.scss'\nimport { Avatar } from 'antd'\n\nexport const UserInfo: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Avatar\n        style={{\n          backgroundColor: '#7265e6',\n          verticalAlign: 'middle',\n        }}\n        size={64}\n        gap={4}\n      >\n        UN\n      </Avatar>\n      <div className={styles.info}>\n        <span className={styles.name}>Алексеев Алексей</span>\n        <span className={styles.role}>Оператор БПЛА</span>\n      </div>\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport styles from './AdditionalMenu.module.scss'\nimport { addUrlPath } from '../functions/addUrlPath'\n\nexport const AdditionalMenu: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <NavLink className={styles.link} to={addUrlPath('/')}>\n        Помощь\n      </NavLink>\n      <NavLink className={styles.link} to={addUrlPath('/')}>\n        Настройки\n      </NavLink>\n      <NavLink className={styles.link} to={addUrlPath('/')}>\n        Выход\n      </NavLink>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/unsplash_8erBzivCEJU.48620151.jpg\";","export default __webpack_public_path__ + \"static/media/unsplash_92OQdTVMMck.53dddd5a.jpg\";","export default __webpack_public_path__ + \"static/media/unsplash_Q9A52B2k770.566b6ce1.jpg\";","import { FC } from 'react'\nimport { Breadcrumb } from 'antd'\nimport { NavLink } from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { TaskCard } from '../dashboard/TaskCard'\n\nimport styles from './Tasks.module.scss'\nimport img1 from '../../assets/unsplash_8erBzivCEJU.jpg'\nimport img2 from '../../assets/unsplash_92OQdTVMMck.jpg'\nimport img3 from '../../assets/unsplash_Q9A52B2k770.jpg'\n\nexport const Tasks: FC = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Breadcrumb>\n        <Breadcrumb.Item>Главная</Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <NavLink to={addUrlPath('/tasks')}>Назначенные задания</NavLink>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      <span className={styles.title}>Назначенные задания</span>\n      <div className={styles.tasks}>\n        <TaskCard\n          title={'Практика'}\n          url={'/unity'}\n          width={260}\n          imgUrl={img3}\n          tags={[\n            {\n              color: '#52C41A',\n              text: 'Выполнено',\n            },\n            {\n              color: '#FFA940',\n              text: '80',\n            },\n          ]}\n          description={'Возврат домой'}\n        />\n        <TaskCard\n          title={'Практика'}\n          url={'/unity'}\n          width={260}\n          imgUrl={img2}\n          tags={[\n            {\n              color: '#1890FF',\n              text: 'Назначено',\n            },\n          ]}\n          description={'Взлет и посадка'}\n        />\n        <TaskCard\n          title={'Тест'}\n          url={'/tests'}\n          width={260}\n          imgUrl={img1}\n          tags={[\n            {\n              color: '#FF7875',\n              text: 'Назначено 23:29:29',\n            },\n          ]}\n          description={'Основы управления летательными аппаратами'}\n        />\n      </div>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\ninterface InitialType {\n  name: string\n}\n\nconst initialState: InitialType = {\n  name: 'User Name',\n}\n\nconst userProfileSLice = createSlice({\n  name: 'user/profile',\n  initialState: initialState as InitialType,\n  reducers: {\n    setName: (state, { payload }) => {\n      state.name = payload\n    },\n  },\n})\n\nexport const userProfileActions = userProfileSLice.actions\nexport default userProfileSLice.reducer\n","import { combineReducers } from '@reduxjs/toolkit'\nimport userProfileReducer from './reducers/profileSlice'\n\nexport const userReducers = combineReducers({\n  profile: userProfileReducer,\n})\n","import { createSlice } from '@reduxjs/toolkit'\nimport { v4 as uuidv4 } from 'uuid'\n\ninterface QuestionType {\n  id: string\n  quest: string\n  trueA: string\n  ifTrue: number\n  answers: {\n    id: string\n    text: string\n  }[]\n}\n\nexport interface TaskListType {\n  id: string\n  description: string\n  imgUrl: string\n  tags: {\n    color: string\n    text: string\n  }[]\n  currentStatus: 'new' | 'complete' | 'skipped'\n  result: number\n  testDescription: string\n  questions: QuestionType[]\n}\n\ninterface InitialType {\n  list: TaskListType[]\n}\n\nconst initialState: InitialType = {\n  list: [\n    {\n      id: uuidv4(),\n      result: 80,\n      currentStatus: 'complete',\n      description: 'Основы электротехники',\n      testDescription:\n        'Ответьте на вопросы теста. Каждый вопрос содержит один правильный ответ.',\n      imgUrl:\n        'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\n      tags: [\n        {\n          color: '#52C41A',\n          text: 'Выполнено',\n        },\n        {\n          color: '#FFA940',\n          text: '80',\n        },\n      ],\n      questions: [],\n    },\n    {\n      id: uuidv4(),\n      result: 0,\n      currentStatus: 'new',\n      description: 'Основы управления летательными аппаратами',\n      testDescription:\n        'Ответьте на вопросы теста. Каждый вопрос содержит один правильный ответ. Внимание! Время на тестирование ограничено.',\n      imgUrl:\n        'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\n      tags: [\n        {\n          color: '#FF7875',\n          text: 'Назначено 23:29:29',\n        },\n      ],\n      questions: [\n        {\n          quest:\n            'Основная составляющая квадрокоптера, имеющая множество входов и выходов для получения, обработки и передачи информации это:',\n          trueA: '1872491241042',\n          ifTrue: 50,\n          id: uuidv4(),\n          answers: [\n            {\n              id: '1872491241042',\n              text: 'полётный контроллер',\n            },\n            {\n              id: uuidv4(),\n              text: 'система радиоприёма и передачи',\n            },\n            {\n              id: uuidv4(),\n              text: 'рама квадрокоптера',\n            },\n            {\n              id: uuidv4(),\n              text: 'система передачи видео (FPV)',\n            },\n          ],\n        },\n        {\n          quest:\n            'Линейный и угловой манёвры БМС относительно оси Z называются:',\n          trueA: '892397582198456234',\n          ifTrue: 50,\n          id: uuidv4(),\n          answers: [\n            {\n              id: '892397582198456234',\n              text: 'тангаж, поперечное скольжение',\n            },\n            {\n              id: uuidv4(),\n              text: 'крен, продольное скольжение',\n            },\n            {\n              id: uuidv4(),\n              text: 'рысканье, изменение высоты',\n            },\n            {\n              id: uuidv4(),\n              text: 'изменение высоты, движение вперед-назад',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: uuidv4(),\n      result: 0,\n      currentStatus: 'new',\n      description: 'Основы сборки летательных аппаратов',\n      testDescription:\n        'Ответьте на вопросы теста. Каждый вопрос содержит один правильный ответ.',\n      imgUrl:\n        'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\n      tags: [\n        {\n          color: 'blue',\n          text: 'Назначено',\n        },\n      ],\n      questions: [],\n    },\n    {\n      id: uuidv4(),\n      result: 0,\n      currentStatus: 'new',\n      description: 'Монтаж и сборка FPV',\n      testDescription:\n        'Ответьте на вопросы теста. Каждый вопрос содержит один правильный ответ.',\n      imgUrl:\n        'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\n      tags: [\n        {\n          color: 'gray',\n          text: 'Выполнить до 29.12.2021',\n        },\n      ],\n      questions: [],\n    },\n    {\n      id: uuidv4(),\n      result: 0,\n      currentStatus: 'skipped',\n      description: 'Основы навигации и пилотирования',\n      testDescription:\n        'Ответьте на вопросы теста. Каждый вопрос содержит один правильный ответ.',\n      imgUrl:\n        'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\n      tags: [\n        {\n          color: '#FF4D4F',\n          text: 'Просрочено',\n        },\n      ],\n      questions: [],\n    },\n  ],\n}\n\nconst theoryTestsSLice = createSlice({\n  name: 'tests/theory',\n  initialState: initialState as InitialType,\n  reducers: {\n    addTests: (state, { payload }) => {\n      state.list = payload\n    },\n    completeTest: (\n      state,\n      {\n        payload,\n      }: {\n        payload: {\n          testId: string\n          result: number\n        }\n      }\n    ) => {\n      state.list = state.list.map((test) => {\n        if (test.id === payload.testId) {\n          return {\n            ...test,\n            currentStatus: 'complete',\n            result: payload.result,\n            tags: [\n              {\n                color: payload.result >= 70 ? '#52C41A' : '#FF4D4F',\n                text: 'Выполнено',\n              },\n              {\n                color: payload.result >= 70 ? '#52C41A' : '#FFA940',\n                text: payload.result.toString(),\n              },\n            ],\n          }\n        } else return test\n      })\n    },\n  },\n})\n\nexport const theoryTestsActions = theoryTestsSLice.actions\nexport default theoryTestsSLice.reducer\n","import { combineReducers } from '@reduxjs/toolkit'\nimport theoryReducerReducer from './reducers/theoryTestsSlice'\n\nexport const testsReducers = combineReducers({\n  theory: theoryReducerReducer,\n})\n","import { combineReducers, Reducer } from '@reduxjs/toolkit'\nimport { userReducers } from './user'\nimport { testsReducers } from './tests'\n\nconst appReducer = combineReducers({\n  userReducers,\n  testsReducers,\n})\n\nexport type RootCombine = ReturnType<typeof appReducer>\n\nconst rootReducer: Reducer = (state: RootCombine, action) => {\n  if (action.type === 'LOG_OUT') {\n    return appReducer(undefined, action)\n  }\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer\n","import { takeLeading } from 'redux-saga/effects'\n\nfunction* loadUserData(): Generator {}\n\nexport function* emptyWorker(): Generator {\n  yield takeLeading('user/empty', loadUserData)\n}\n","import { all, call, spawn } from 'redux-saga/effects'\nimport { message } from 'antd'\nimport { emptyWorker } from './empty/emptyWorker'\n\nfunction* rootSaga(): Generator {\n  const sagas = [emptyWorker]\n\n  yield all(\n    sagas.map((saga) =>\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga)\n            break\n          } catch (e) {\n            message.error(`Error ${JSON.stringify(e)}`).then()\n            console.log(e)\n          }\n        }\n      })\n    )\n  )\n}\n\nexport default rootSaga\n","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport rootReducer, { RootCombine } from './index'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../saga/index'\nimport { persistStore } from 'redux-persist'\nimport thunk from 'redux-thunk'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = configureStore({\n  reducer: { rootReducer },\n  middleware: [sagaMiddleware, thunk],\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = {\n  rootReducer: RootCombine\n}\n\nexport const persistedStore = persistStore(store)\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { FC } from 'react'\nimport { useAppSelector } from '../../store/store'\nimport { Breadcrumb } from 'antd'\nimport { NavLink } from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { TaskCard } from '../dashboard/TaskCard'\n\nimport styles from './Tests.module.scss'\n\nexport const TestsList: FC = () => {\n  const tests = useAppSelector(\n    (state) => state.rootReducer.testsReducers.theory.list\n  )\n\n  return (\n    <div className={styles.wrapper}>\n      <Breadcrumb>\n        <Breadcrumb.Item>Главная</Breadcrumb.Item>\n        <Breadcrumb.Item>Теория</Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <NavLink to={addUrlPath('/tests')}>Тесты</NavLink>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      <span className={styles.title}>Тесты</span>\n      <div className={styles.testsWrapper}>\n        {tests.map((test, index) => (\n          <TaskCard\n            key={index}\n            title={''}\n            withoutTitle\n            description={test.description}\n            tags={test.tags}\n            url={`/tests/${test.id}`}\n            imgUrl={test.imgUrl}\n            width={260}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { FC } from 'react'\nimport Moment from 'react-moment'\n\nimport styles from './Tests.module.scss'\n\ninterface Props {\n  startFrom: string\n}\n\nexport const Timer: FC<Props> = ({ startFrom }) => {\n  return (\n    <div className={styles.timer}>\n      <Moment\n        duration={startFrom}\n        durationFromNow\n        interval={1000}\n        format={'HH:mm:ss'}\n      />\n    </div>\n  )\n}\n","import { Button, Form, Radio, Space } from 'antd'\nimport { FC } from 'react'\nimport {\n  TaskListType,\n  theoryTestsActions,\n} from '../../store/tests/reducers/theoryTestsSlice'\nimport { useAppDispatch } from '../../store/store'\nimport { TaskStatusType } from './TestPage'\n\nimport styles from './Tests.module.scss'\n\ninterface Props {\n  task: TaskListType\n  setStatus: (nesStatus: TaskStatusType) => void\n}\n\nexport const Questions: FC<Props> = ({ task, setStatus }) => {\n  const dispatch = useAppDispatch()\n  const [form] = Form.useForm()\n\n  const onFinish = (values: any) => {\n    let result = 0\n\n    task.questions.forEach((quest) => {\n      if (values[quest.id] === quest.trueA) {\n        result += quest.ifTrue\n      }\n    })\n\n    dispatch(\n      theoryTestsActions.completeTest({\n        testId: task.id,\n        result: result,\n      })\n    )\n\n    setStatus({\n      completed: true,\n      result: result,\n      success: result >= 70,\n    })\n  }\n\n  return (\n    <div className={styles.questions}>\n      <Form form={form} onFinish={onFinish}>\n        {task.questions.map((taskQuest, index) => (\n          <div className={styles.task} key={index}>\n            <div className={styles.taskHead}>\n              <span className={styles.taskNum}>{index + 1}.</span>\n              <span className={styles.questTitle}>{taskQuest.quest}</span>\n            </div>\n            <div className={styles.answers}>\n              <Form.Item name={taskQuest.id}>\n                <Radio.Group>\n                  <Space direction=\"vertical\">\n                    {taskQuest.answers.map((answer, index) => (\n                      <Radio key={index} value={answer.id}>\n                        {answer.text}\n                      </Radio>\n                    ))}\n                  </Space>\n                </Radio.Group>\n              </Form.Item>\n            </div>\n          </div>\n        ))}\n        <Button\n          type={'primary'}\n          size={'large'}\n          onClick={form.submit}\n          style={{\n            marginTop: 58,\n          }}\n        >\n          Отправить ответы\n        </Button>\n      </Form>\n    </div>\n  )\n}\n","import { FC, useState } from 'react'\nimport {\n  NavLink,\n  Redirect,\n  RouteComponentProps,\n  withRouter,\n} from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { useAppSelector } from '../../store/store'\nimport { Breadcrumb, Button, Result } from 'antd'\nimport { Timer } from './Timer'\nimport moment from 'moment'\nimport { Questions } from './Questions'\n\nimport styles from './Tests.module.scss'\n\ninterface RouteProps {\n  testId: string\n}\n\ninterface Props extends RouteProps {}\n\nexport interface TaskStatusType {\n  completed: boolean\n  result: number\n  success: boolean\n}\n\nconst TestPage: FC<RouteComponentProps<Props>> = ({ match }) => {\n  const thisTest = useAppSelector(\n    (state) =>\n      state.rootReducer.testsReducers.theory.list.filter(\n        (test) => test.id === match.params.testId\n      )[0]\n  )\n\n  const [status, setStatus] = useState<TaskStatusType>({\n    completed: thisTest.questions.length === 0,\n    result: 0,\n    success: false,\n  })\n\n  const tryAgain = () => {\n    setStatus({\n      completed: false,\n      result: 0,\n      success: false,\n    })\n  }\n\n  if (!thisTest) {\n    return <Redirect to={addUrlPath('/tests')} />\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <Breadcrumb>\n        <Breadcrumb.Item>Главная</Breadcrumb.Item>\n        <Breadcrumb.Item>Теория</Breadcrumb.Item>\n        <Breadcrumb.Item>Тесты</Breadcrumb.Item>\n        <Breadcrumb.Item>\n          <NavLink to={addUrlPath(`/tests/${thisTest.id}`)}>\n            {thisTest.description}\n          </NavLink>\n        </Breadcrumb.Item>\n      </Breadcrumb>\n      {!status.completed && (\n        <>\n          <span className={`${styles.title} ${styles.ltlMargin}`}>\n            {thisTest.description}\n          </span>\n          <Timer startFrom={moment().toISOString()} />\n          <p className={styles.testDesc}>{thisTest.testDescription}</p>\n          <Questions setStatus={setStatus} task={thisTest} />\n        </>\n      )}\n      {status.completed && (\n        <div className={styles.completed}>\n          <Result\n            status={thisTest.result >= 70 ? 'success' : 'error'}\n            title={thisTest.result >= 70 ? 'Тест пройден!' : 'Тест не пройден'}\n            subTitle={\n              thisTest.result >= 70\n                ? `Вы прекрасно справились с заданием, так держать! Результат: ${thisTest.result} из 100 баллов`\n                : `Попробуйте улучшить свои знания и пройти тест еще раз. Результат: ${thisTest.result} из 100 баллов`\n            }\n            extra={[\n              <NavLink to={addUrlPath('/tests')} key={'back'}>\n                <Button type=\"primary\" key=\"console\">\n                  Вернуться к тестам\n                </Button>\n              </NavLink>,\n              <div\n                key={'repeat'}\n                style={{\n                  display: 'inline-block',\n                }}\n              >\n                {thisTest.questions.length > 0 && (\n                  <Button onClick={tryAgain}>Повторить попытку</Button>\n                )}\n              </div>,\n            ]}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport const TestPageRouted = withRouter(TestPage)\n","import { FC } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\nimport { TestsList } from './TestsList'\nimport { TestPageRouted } from './TestPage'\n\nexport const Tests: FC = () => {\n  return (\n    <Switch>\n      <Route exact path={addUrlPath('/tests')} component={TestsList} />\n      <Route\n        exact\n        path={addUrlPath('/tests/:testId')}\n        component={TestPageRouted}\n      />\n    </Switch>\n  )\n}\n","import React, { FC } from 'react'\nimport { UnityApp } from '../pages/unity-app'\nimport { Route, Switch } from 'react-router-dom'\nimport { addUrlPath } from '../functions/addUrlPath'\nimport { Dashboard } from '../pages/dashboard'\nimport { Menu } from '../components/Menu'\nimport { Layout } from 'antd'\nimport { Topbar } from '../components/Topbar'\nimport { UserInfo } from '../components/UserInfo'\nimport { AdditionalMenu } from '../components/AdditionalMenu'\nimport { Tasks } from '../pages/tasks'\n\nimport './App.less'\nimport { Tests } from '../pages/tests'\n\nconst { Header, Sider, Content } = Layout\n\nexport const App: FC = () => {\n  return (\n    <div className={'App'}>\n      <Layout\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <Header\n          style={{\n            backgroundColor: '#ffffff',\n            borderBottom: '1px solid #F0F0F0',\n          }}\n        >\n          <Topbar />\n        </Header>\n        <Layout>\n          <Sider\n            width={256}\n            theme={'light'}\n            style={{\n              overflowY: 'auto',\n            }}\n          >\n            <UserInfo />\n            <Menu />\n            <AdditionalMenu />\n          </Sider>\n          <Content\n            style={{\n              height: '100%',\n              overflowY: 'auto',\n              paddingTop: '10px',\n              paddingLeft: '42px',\n              paddingBottom: '30px',\n              paddingRight: '42px',\n              backgroundColor: '#FAFAFA',\n            }}\n          >\n            <Switch>\n              <Route exact path={addUrlPath('/')} component={Dashboard} />\n              <Route path={addUrlPath('/unity')} component={UnityApp} />\n              <Route path={addUrlPath('/tasks')} component={Tasks} />\n              <Route path={addUrlPath('/tests')} component={Tests} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { render } from 'react-dom'\nimport { App } from './app'\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nrender(\n  <Fragment>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </Fragment>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tests_wrapper__2pPF-\",\"title\":\"Tests_title__13hC4\",\"ltlMargin\":\"Tests_ltlMargin__3bYHg\",\"testsWrapper\":\"Tests_testsWrapper__3LMhm\",\"testDesc\":\"Tests_testDesc__3xzwb\",\"timer\":\"Tests_timer__2Vi37\",\"questions\":\"Tests_questions__3Hdv1\",\"task\":\"Tests_task__1Noxw\",\"taskHead\":\"Tests_taskHead__25UYP\",\"taskNum\":\"Tests_taskNum__3iakx\",\"questTitle\":\"Tests_questTitle__1Tdmm\",\"answers\":\"Tests_answers__25vc5\",\"completed\":\"Tests_completed__2GlJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Topbar_wrapper__toH_3\",\"settings\":\"Topbar_settings__1VPn3\",\"button\":\"Topbar_button__3OzKO\",\"badge\":\"Topbar_badge__3DuuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserInfo_wrapper__qa8U-\",\"info\":\"UserInfo_info__33W3C\",\"name\":\"UserInfo_name__1y1lm\",\"role\":\"UserInfo_role___Ce0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AdditionalMenu_wrapper__2PIoO\",\"link\":\"AdditionalMenu_link__2DfK9\"};"],"sourceRoot":""}