{"version":3,"sources":["pages/unity-app/index.tsx","functions/addUrlPath.ts","pages/dashboard/index.tsx","components/Menu.tsx","components/Topbar.tsx","app/index.tsx","store/user/reducers/profileSlice.ts","store/user/index.ts","store/index.ts","saga/empty/emptyWorker.ts","saga/index.ts","store/store.ts","index.tsx"],"names":["unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","UnityApp","style","width","height","addUrlPath","path","Dashboard","to","Menu","Topbar","Header","Layout","Sider","Content","App","className","theme","exact","component","userProfileSLice","createSlice","name","initialState","reducers","setName","state","payload","actions","userReducers","combineReducers","profile","userProfileReducer","appReducer","rootReducer","action","type","undefined","loadUserData","emptyWorker","takeLeading","rootSaga","sagas","all","map","saga","spawn","call","message","error","JSON","stringify","then","console","log","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","thunk","run","persistStore","useSelector","render","document","getElementById"],"mappings":"kLAGMA,EAAe,IAAIC,eAAa,CACpCC,UAAW,6BACXC,QAAS,wBACTC,aAAc,gCACdC,QAAS,0BAGEC,EAAe,WAC1B,OACE,cAAC,IAAD,CACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,QAEVT,aAAcA,K,gBCjBPU,EAAuC,SAACC,GACnD,MAAM,WAAN,OAAkBA,ICGPC,EAAgB,WAC3B,OACE,4CAEE,cAAC,IAAD,CAASC,GAAIH,EAAW,UAAxB,6BCNOI,EAAW,WACtB,OACE,8BACE,4B,SCHOC,EAAa,WACxB,OAAO,uCCQDC,G,OAA2BC,IAA3BD,QAAQE,EAAmBD,IAAnBC,MAAOC,EAAYF,IAAZE,QAEVC,EAAU,WACrB,OACE,qBAAKC,UAAW,MAAhB,SACE,eAAC,IAAD,CACEd,MAAO,CACLC,MAAO,OACPC,OAAQ,QAHZ,UAME,cAACS,EAAD,CAAOI,MAAO,QAAd,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,cAACN,EAAD,UACE,cAAC,EAAD,MAEF,cAACG,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACZ,KAAMD,EAAW,KAAMc,UAAWZ,IAC/C,cAAC,IAAD,CAAOD,KAAMD,EAAW,UAAWc,UAAWlB,oB,wBCvBxDmB,EAAmBC,YAAY,CACnCC,KAAM,eACNC,aANgC,CAChCD,KAAM,aAMNE,SAAU,CACRC,QAAS,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACjBD,EAAMJ,KAAOK,MAMJP,GADmBA,EAAiBQ,QACpCR,EAAf,SClBaS,EAAeC,YAAgB,CAC1CC,QAASC,ICDLC,EAAaH,YAAgB,CACjCD,iBAaaK,EARc,SAACR,EAAoBS,GAChD,MAAoB,YAAhBA,EAAOC,KACFH,OAAWI,EAAWF,GAGxBF,EAAWP,EAAOS,I,oDCZjBG,G,WAEOC,GAFjB,SAAUD,IAAV,iGAEO,SAAUC,IAAV,iEACL,OADK,SACCC,YAAY,aAAcF,GAD3B,uC,eCAGG,GAAV,SAAUA,IAAV,uEAGE,OAFMC,EAAQ,CAACH,GADjB,SAGQI,YACJD,EAAME,KAAI,SAACC,GAAD,OACRC,YAAK,UAAC,8EAGA,OAHA,kBAGMC,YAAKF,GAHX,mEAMAG,IAAQC,MAAR,gBAAuBC,KAAKC,UAAL,QAAqBC,OAC5CC,QAAQC,IAAR,MAPA,oFALZ,uCAoBeb,Q,gBChBTc,EAAiBC,cAEVC,EAAQC,YAAe,CAClCC,QAAS,CAAEzB,eACX0B,WAAY,CAACL,EAAgBM,OAG/BN,EAAeO,IAAIrB,GAOWsB,YAAaN,GAEoBO,IClB/DC,iBACE,cAAC,aAAD,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.012e0c85.chunk.js","sourcesContent":["import { FC } from 'react'\nimport Unity, { UnityContext } from 'react-unity-webgl'\n\nconst unityContext = new UnityContext({\n  loaderUrl: 'unity/DRONE-HTML.loader.js',\n  dataUrl: 'unity/DRONE-HTML.data',\n  frameworkUrl: 'unity/DRONE-HTML.framework.js',\n  codeUrl: 'unity/DRONE-HTML.wasm',\n})\n\nexport const UnityApp: FC = () => {\n  return (\n    <Unity\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n      unityContext={unityContext}\n    />\n  )\n}\n","export const addUrlPath: (path: string) => string = (path) => {\n  return `/fcp-app${path}`\n}\n","import { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { addUrlPath } from '../../functions/addUrlPath'\n\nexport const Dashboard: FC = () => {\n  return (\n    <div>\n      Dashboard\n      <NavLink to={addUrlPath('/unity')}>Go to unity</NavLink>\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nexport const Menu: FC = () => {\n  return (\n    <div>\n      <span></span>\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nexport const Topbar: FC = () => {\n  return <div>ads</div>\n}\n","import React, { FC } from 'react'\nimport { UnityApp } from '../pages/unity-app'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { addUrlPath } from '../functions/addUrlPath'\nimport { Dashboard } from '../pages/dashboard'\nimport { Menu } from '../components/Menu'\nimport { Layout } from 'antd'\nimport { Topbar } from '../components/Topbar'\n\nimport './App.less'\n\nconst { Header, Sider, Content } = Layout\n\nexport const App: FC = () => {\n  return (\n    <div className={'App'}>\n      <Layout\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <Sider theme={'light'}>\n          <Menu />\n        </Sider>\n        <Layout>\n          <Header>\n            <Topbar />\n          </Header>\n          <Content>\n            <BrowserRouter>\n              <Switch>\n                <Route exact path={addUrlPath('/')} component={Dashboard} />\n                <Route path={addUrlPath('/unity')} component={UnityApp} />\n              </Switch>\n            </BrowserRouter>\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\ninterface InitialType {\n  name: string\n}\n\nconst initialState: InitialType = {\n  name: 'User Name',\n}\n\nconst userProfileSLice = createSlice({\n  name: 'user/profile',\n  initialState: initialState as InitialType,\n  reducers: {\n    setName: (state, { payload }) => {\n      state.name = payload\n    },\n  },\n})\n\nexport const userProfileActions = userProfileSLice.actions\nexport default userProfileSLice.reducer\n","import { combineReducers } from '@reduxjs/toolkit'\nimport userProfileReducer from './reducers/profileSlice'\n\nexport const userReducers = combineReducers({\n  profile: userProfileReducer,\n})\n","import { combineReducers, Reducer } from '@reduxjs/toolkit'\nimport { userReducers } from './user'\n\nconst appReducer = combineReducers({\n  userReducers,\n})\n\nexport type RootCombine = ReturnType<typeof appReducer>\n\nconst rootReducer: Reducer = (state: RootCombine, action) => {\n  if (action.type === 'LOG_OUT') {\n    return appReducer(undefined, action)\n  }\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer\n","import { takeLeading } from 'redux-saga/effects'\n\nfunction* loadUserData(): Generator {}\n\nexport function* emptyWorker(): Generator {\n  yield takeLeading('user/empty', loadUserData)\n}\n","import { all, call, spawn } from 'redux-saga/effects'\nimport { message } from 'antd'\nimport { emptyWorker } from './empty/emptyWorker'\n\nfunction* rootSaga(): Generator {\n  const sagas = [emptyWorker]\n\n  yield all(\n    sagas.map((saga) =>\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga)\n            break\n          } catch (e) {\n            message.error(`Error ${JSON.stringify(e)}`).then()\n            console.log(e)\n          }\n        }\n      })\n    )\n  )\n}\n\nexport default rootSaga\n","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport rootReducer, { RootCombine } from './index'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../saga/index'\nimport { persistStore } from 'redux-persist'\nimport thunk from 'redux-thunk'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = configureStore({\n  reducer: { rootReducer },\n  middleware: [sagaMiddleware, thunk],\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = {\n  rootReducer: RootCombine\n}\n\nexport const persistedStore = persistStore(store)\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import React, { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport { App } from './app'\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}